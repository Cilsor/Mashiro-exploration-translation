#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
#_/    ◆ 勝利時 ME 強制停止 - KGC_ForceStopVictoryME ◆ VX ◆
#_/    ◇ Last update : 2008/03/02 ◇
#_/----------------------------------------------------------------------------
#_/  戦闘勝利時の ME を、マップ画面移行時に強制停止します。
#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/

#==============================================================================
# ★ カスタマイズ項目 - Customize ★
#==============================================================================

module KGC
module ForceStopVictoryME
  # ◆ フェードアウト時間 (ミリ秒)
  #  0 にすると瞬時に停止します。
  FADE_TIME = 1000
end
end

#★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★

$imported = {} if $imported == nil
$imported["ForceStopVictoryME"] = true

#==============================================================================
# ■ Scene_Battle
#==============================================================================

class Scene_Battle < Scene_Base
  #--------------------------------------------------------------------------
  # ● 戦闘終了
  #     result : 結果 (0:勝利 1:逃走 2:敗北)
  #--------------------------------------------------------------------------
  alias battle_end_KGC_ForceStopVictoryME battle_end
  def battle_end(result)
    battle_end_KGC_ForceStopVictoryME(result)

    return if result != 0

    # ME フェード用のスレッドを生成
    @@_victory_me_thread = Thread.new {
      time = KGC::ForceStopVictoryME::FADE_TIME
      RPG::ME.fade(time)                         # ME フェード開始
      sleep(time / 1000.0)                       # フェード完了まで待つ
      RPG::ME.stop                               # ME を停止
    }
  end
end
